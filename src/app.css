@tailwind base;
@tailwind components;
@tailwind utilities;
 
@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 240 10% 3.9%;
 
    --muted: 240 4.8% 95.9%;
    --muted-foreground: 240 3.8% 46.1%;
 
    --popover: 0 0% 100%;
    --popover-foreground: 240 10% 3.9%;
 
    --card: 0 0% 100%;
    --card-foreground: 240 10% 3.9%;
 
    --border: 240 5.9% 90%;
    --input: 240 5.9% 90%;
 
    --primary: 240 5.9% 10%;
    --primary-foreground: 0 0% 98%;
 
    --secondary: 240 4.8% 95.9%;
    --secondary-foreground: 240 5.9% 10%;
 
    --accent: 240 4.8% 95.9%;
    --accent-foreground: 240 5.9% 10%;
 
    --destructive: 0 72.2% 50.6%;
    --destructive-foreground: 0 0% 98%;
 
    --ring: 240 10% 3.9%;
 
    --radius: 0.5rem;
  }
 
  .dark {
    --background: 240 10% 3.9%;
    --foreground: 0 0% 98%;
 
    --muted: 240 3.7% 15.9%;
    --muted-foreground: 240 5% 64.9%;
 
    --popover: 240 10% 3.9%;
    --popover-foreground: 0 0% 98%;
 
    --card: 240 10% 3.9%;
    --card-foreground: 0 0% 98%;
 
    --border: 240 3.7% 15.9%;
    --input: 240 3.7% 15.9%;
 
    --primary: 0 0% 98%;
    --primary-foreground: 240 5.9% 10%;
 
    --secondary: 240 3.7% 15.9%;
    --secondary-foreground: 0 0% 98%;
 
    --accent: 240 3.7% 15.9%;
    --accent-foreground: 0 0% 98%;
 
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
 
    --ring: 240 4.9% 83.9%;
  }
}
 
@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}


body { overflow-y: scroll; }

article:has(img) {
  grid-column: span 2;
  grid-row: span 2;
}
article:has(img) h2 {
  margin-top: 1rem;
}

.text-wrap-style {
  /* not supported in chrome, must use shorthand `text-wrap` */
  text-wrap-style: balance;
}

textarea {
  width: 400px;
  /* make the height at least 3 lines */
  min-height: 3lh;
}

#field-sizing {
  field-sizing: content;
}

[popover] {
  &:popover-open {
    /*   0. BEFORE-OPEN STATE   */
    /*  initial state for what we're animating *in* from  */
    @starting-style {
      opacity: 0;
      transform: translateY(100%);
    }

    /*   1. OPEN STATE   */
    /*  state when popover is open, BOTH:
      what we're transitioning *in* to 
      and transitioning *out* from */
    opacity: 1;
    transform: translateY(0);
  }

  /*   2. AFTER-OPEN-IS-CLOSED STATE   */
  /*  initial state for what we're animating *out* to */
  opacity: 0;
  transform: translateY(100%);

  /*  enumarate transitioning properties, including display */
  transition:
    transform 0.5s,
    opacity 0.5s;
}

[popover]:popover-open {
  width: 200px;
  position: absolute;
  inset: unset;
  margin: 0;
  right: 16px;
  bottom: 16px;
}
::backdrop {
  /* backdrop-filter: blur(3px); */
}


.align-content {
  align-content: center;
}
.margin-auto {
  margin-left: auto;
  margin-right: auto;
}